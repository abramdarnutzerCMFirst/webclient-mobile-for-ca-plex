/(!EnableAction:Grid.Clear,Grid.Insert,Grid.Remove,Grid.Update)

/(!StatesArea)
	/(!Action:Grid.Clear)
	"/(!NameID)": {
		"gridCols": /(!This:!jsonCols),
		"gridRows": /(!This:!jsonRows)
	},
	/(!Action)
	/(!Action:Grid.Insert)
	"/(!NameID)": {
		"gridCols": /(!This:!jsonCols),
		"gridRows": /(!This:!jsonRows)
	},
	/(!Action)
	/(!Action:Grid.Remove)
	"/(!NameID)": {
		"gridCols": /(!This:!jsonCols),
		"gridRows": /(!This:!jsonRows)
	},
	/(!Action)
	/(!Action:Grid.Update)
	"/(!NameID)": {
		"gridCols": /(!This:!jsonCols),
		"gridRows": /(!This:!jsonRows)
	},
	/(!Action)
/(!StatesArea)

/(!JSInit)
	/(!WebGrid-model.inc)
/(!JSInit)

/(!JS)
	/(!WebGrid-model.inc)
/(!JS)

/(!MainArea)
{
	xtype: "textfield",
	hidden: true,
	name: "/(!NameID)"
},
/(!MainArea)

{
	xtype: "list",
	name: "/(!NameID)",
	controlName: wcli.util.parseControlName("/(!Property:ControlName)"),
	flex: 1,
	grouped: "/(!Param:grouped)" === "true",
	indexBar: "/(!Param:indexBar)" === "true",
	itemTpl: (window["/(!Param:tplGenerator)"] || wcli.util.gridTpl)(/(!This:!jsonCols),/(!jsonColVis), [
		/(!AttachPoint:name=ColumnsArea:inlinetemplate:sep=,)
			"/(!Text:htmlbr)"
		/(!AttachPoint)
	], "/(!Param:grouped)" === "true"),
	store: window["/(!NameID)_store"],
	disabled: "/(!Mode)" === "Read Only",
	listeners: {
		itemtap: {
			fn: function(view, index) {
				/(!If:/(!Event:phys=Select))
				index = view.getStore().getAt(index).get('$$idx$$');
				panel.setValues({ "/(!NameID)": index });
				panel.submit(wcli.util.evt("Select", "/(!NameID)"));
				/(!If)
			},
			scope: this
		},
		afterrender: {
			fn: function() {
				/(!If:/(!Event:phys=Load Grid))
				this.scroller.on('scrollend', function() {
					var offsetBoundary = this.scroller.offsetBoundary;
					var offset = scroller.offset;
					if (offset >= offsetBoundary) {
						panel.submit(wcli.util.evt("LoadGrid", "/(!NameID)"));
					}
				}, this);
				/(!If)
			},
			scop: this
		}
	}
},